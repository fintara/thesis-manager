# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
#    parameter_name: value

services:
  ##################################
  ## USER
  user.provider:
    class: AppBundle\Security\User\MultiUserProvider
    arguments: [ "@user.repository" ]

  user.factory:
    class: AppBundle\Factory\UserFactory

  user.normalizer:
    class: AppBundle\Serializer\Normalizer\UserNormalizer
    tags:
      - { name: serializer.normalizer }

  user.repository:
    class: AppBundle\Repository\UserRepository
    factory: ["@doctrine", getRepository]
    arguments: [ "AppBundle:User" ]
    calls:
      - [setUserFactory, ["@user.factory"]]

  user.service:
    class: AppBundle\Services\UserService
    arguments:
      - "@user.repository"
      - "@user.factory"
      - "@security.password_encoder"

  #################################
  ## TOPICS
  topic.normalizer:
    class: AppBundle\Serializer\Normalizer\TopicNormalizer
    arguments: ["@security.token_storage"]
    tags:
      - { name: serializer.normalizer }

  topic.repository:
    class: AppBundle\Repository\TopicRepository
    factory: ["@doctrine", getRepository]
    arguments: [ "AppBundle:Topic" ]

  topic.service:
    class: AppBundle\Services\TopicService
    arguments:
      - "@topic.repository"
      - "@reservation.repository"

  thesis.repository:
    class: AppBundle\Repository\ThesisRepository
    factory: ["@doctrine", getRepository]
    arguments: [ "AppBundle:Thesis" ]

  thesis.service:
    class: AppBundle\Services\ThesisService
    arguments:
      - "@thesis.repository"

  thesis.normalizer:
    class: AppBundle\Serializer\Normalizer\ThesisNormalizer
    tags:
      - { name: serializer.normalizer }

  draft.repository:
    class: AppBundle\Repository\DraftRepository
    factory: ["@doctrine", getRepository]
    arguments: [ "AppBundle:Draft" ]
    calls:
        - [setDirectory, ["%drafts_directory%"]]

  draft.service:
    class: AppBundle\Services\DraftService
    arguments:
      - "@draft.repository"

  feedback.repository:
    class: AppBundle\Repository\FeedbackRepository
    factory: ["@doctrine", getRepository]
    arguments: [ "AppBundle:Feedback" ]
    calls:
        - [setDirectory, ["%feedbacks_directory%"]]

  feedback.service:
    class: AppBundle\Services\FeedbackService
    arguments:
      - "@feedback.repository"

  review.repository:
    class: AppBundle\Repository\ReviewRepository
    factory: ["@doctrine", getRepository]
    arguments: [ "AppBundle:Review" ]
    calls:
        - [setDirectory, ["%reviews_directory%"]]

  review.service:
    class: AppBundle\Services\ReviewService
    arguments:
      - "@review.repository"
  ##################################
  ## RESERVATIONS
  reservation.repository:
    class: AppBundle\Repository\ReservationRepository
    factory: ["@doctrine", getRepository]
    arguments: [ "AppBundle:Reservation" ]
  ##################################
  ## MISC
  form_authenticator:
    class: AppBundle\Security\FormAuthenticator
    arguments:
      - "@security.password_encoder"
      - "@router"